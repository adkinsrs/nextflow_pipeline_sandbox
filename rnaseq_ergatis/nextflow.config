// Needs to be named 'nextflow.config' to automatically be found
// Otherwise pass to CLI (nextflow -c <path_to_config> run <script>)

// Source - http://ergatis.igs.umaryland.edu//cgi/view_pipeline.cgi?instance=/local/projects/RNASEQ/Projects_starting_Jan2022/XNLON/rnaseq/ergatis//workflow/runtime/pipeline/13365834737/pipeline.xml

manifest {
    description = "Workflow for a basic RNA-Seq run typically run on the Ergatis platform"
    mainScript = "main.nf"
    name = "RNA-Seq"
    version = "0.1"
}

params {
    // Reference fasta file
    ref_fasta_file = "/local/projects/RNASEQ/Projects_starting_Jan2022/XNLON/rnaseq/reference/Homo_sapiens.GRCh38.dna.toplevel.fa"
    // two lists of paired reads files
    list_file1 = "/local/projects/RNASEQ/Projects_starting_Jan2022/XNLON/rnaseq/ergatis/Pipeline_20220930.111839/first_mates.list"
    list_file2 = "/local/projects/RNASEQ/Projects_starting_Jan2022/XNLON/rnaseq/ergatis/Pipeline_20220930.111839/second_mates.list"

    // Where rnaseq scripts are housed
    bin_dir = "/local/projects/ergatis/package-rnaseq/bin"

    //path to HISAT2 package binary directory
    params.hisat2_bin_dir = "/usr/local/packages/hisat2-2.1.0/"
    //path to samtools package binary directory
    params.samtools_bin_dir = "/usr/local/bin/"
}

// Invoked when workflow execution is completed
// Must be assigned (see https://www.nextflow.io/docs/latest/metadata.html#decoupling-metadata)
workflow.onComplete = {
    println "Pipeline completed at: $workflow.complete"
    println "Execution status: ${ workflow.success ? 'OK' : 'failed' }"
}

// Invoked when runtime or process error causes execution to stop
workflow.onError = {
    println "Oops... Pipeline execution stopped with the following message: ${workflow.errorMessage}"
}

/*

[samtools_file_convert sorted_name]
;; input alignment file format (BAM or SAM)
$;INPUT_FILE_FORMAT$; = BAM
;; path to list of alignment files
$;INPUT_FILE_LIST$; = $;REPOSITORY_ROOT$;/output_repository/bowtie2/$;PIPELINEID$;_alignment/bowtie2.bam.list
;; string of options for file conversion (eg : 123). 1 - BAM to sorted BAM, 2 - sorted BAM to indexed BAM, 3 - BAM to SAM, and 4 - SAM to BAM
$;OPTIONS$; = 13
;; samtools sort parameters
$;SAMTOOLS_SORT_PARAMETERS$; = -n

[samtools_alignment_stats alignment_stats]
;; path to list of alignment BAM files
$;INPUT_FILE_LIST$; = $;REPOSITORY_ROOT$;/output_repository/samtools_file_convert/$;PIPELINEID$;_sorted_position/samtools_file_convert.sorted_by_position_bam.list

[align_bowtie_stats bowtie_stats]
;; path to list of samtools mapstat files
$;INPUT_FILE$; = $;REPOSITORY_ROOT$;/output_repository/samtools_alignment_stats/$;PIPELINEID$;_alignment_stats/samtools_alignment_stats.mapstats.list

[percent_mapped_stats percent_mapped]
;; path to annotation file (BED or GTF or GFF3 format file)
$;ANNOTATION_FILE$; = /local/projects/RNASEQ/Projects_starting_Jan2022/XNLON/rnaseq/reference/Homo_sapiens.GRCh38.107.chr.gtf
;; annotation file format (bed/gtf/gff3)
$;ANNO_FORMAT$; = gtf
;; Attribute id from column 9 of the annotation file to be used as region id. Required if used --alignment.
$;ATTRIBUTE_ID$; = gene_id
;; path to bedtools package binary directory.
$;BEDTOOLS_BIN_DIR$; = $;BEDTOOLS_BIN$;
;; Feature type from column 3 of annotation file. Required if used --alignment.
$;FEATURE_TYPE$; = gene
;; Group_by id from column 9 of the annotation file.
$;GROUPBY_ID$; = gene_id
;; path to list of alignment BAM files
$;INPUT_FILE_LIST$; = $;REPOSITORY_ROOT$;/output_repository/samtools_file_convert/$;PIPELINEID$;_sorted_name/samtools_file_convert.sorted_by_name_bam.list
;; Organism type (prok/euk)
$;ORG_TYPE$; = prok
;; path to reference FastA file
$;REFERENCE_FASTA$; = $;REPOSITORY_ROOT$;/output_repository/samtools_reference_index/$;PIPELINEID$;_reference/i1/g1/Homo_sapiens.GRCh38.dna.toplevel.fa
;; path to samtools package binary directory.
$;SAMTOOLS_BIN_DIR$; = $;SAMTOOLS_BIN$;

[bam2bigwig visualization]
;; path to bedtools package binary directory.
$;BEDTOOLS_BIN_DIR$; = $;BEDTOOLS_BIN$;
;; path to list of alignment BAM files
$;INPUT_FILE_LIST$; = $;REPOSITORY_ROOT$;/output_repository/samtools_file_convert/$;PIPELINEID$;_sorted_position/samtools_file_convert.sorted_by_position_bam.list
;; use --w to include WIG format files in the output, --e for single-end BAM file input and --v for verbose execution.
$;OTHER_ARGS$; = --v
;; path to reference FastA file
$;REFERENCE_FASTA$; = $;REPOSITORY_ROOT$;/output_repository/samtools_reference_index/$;PIPELINEID$;_reference/i1/g1/Homo_sapiens.GRCh38.dna.toplevel.fa
;; path to samtools package binary directory.
$;SAMTOOLS_BIN_DIR$; = $;SAMTOOLS_BIN$;
;; Whether the data is from a strand-specific assay (firststrand or secondstrand).
$;STRANDED$; = firststrand
;; path to ucsc utilities directory.
$;UCSC_UTIL_DIR$; = $;UCSC_UTIL$;

[rpkm_coverage_stats rpkm_cvg]
;; path to annotation file (BED or GTF or GFF3 format file)
$;ANNOTATION_FILE$; = /local/projects/RNASEQ/Projects_starting_Jan2022/XNLON/rnaseq/reference/Homo_sapiens.GRCh38.107.chr.gtf
;; annotation file format (bed/gtf/gff3)
$;ANNOTATION_FILE_TYPE$; = gtf
;; attribute id from column 9 of GTF or GFF3 file to be used as region ID. Required if used --rpkm_analysis.
$;ATTRIBUTE_ID$; = gene_id
;; path to bedtools package binary directory.
$;BEDTOOLS_BIN_DIR$; = $;BEDTOOLS_BIN$;
;; feature type from column 3 of GTF or GFF3 file. Required if used --rpkm_analysis.
$;FEATURE_ID$; = gene
;; group_by id from column 9 of GTF or GFF3 file to be used to group regions by (use NONE for proks).
$;GROUPBY_ID$; = NONE
;; path to list of alignment BAM files
$;INPUT_FILE_LIST$; = $;REPOSITORY_ROOT$;/output_repository/samtools_file_convert/$;PIPELINEID$;_sorted_position/samtools_file_convert.sorted_by_position_bam.list
;; use --v for verbose summary.
$;OTHER_ARGS$; = --v
;; path to reference FastA file
$;REFERENCE_FASTA$; = $;REPOSITORY_ROOT$;/output_repository/samtools_reference_index/$;PIPELINEID$;_reference/i1/g1/Homo_sapiens.GRCh38.dna.toplevel.fa
;; region to determine coverage for (genomic:genic:exonic) separated by ':' or ',' or ';'
$;REGION_TYPE$; = genic
;; path to samtools package binary directory.
$;SAMTOOLS_BIN_DIR$; = $;SAMTOOLS_BIN$;

[wrapper_align wrap]
;; pipeline output repository
$;OUTPUT_REPOSITORY$; = $;REPOSITORY_ROOT$;/output_repository
;; ergatis pipeline id
$;PIPELINE_ID$; = $;PIPELINEID$;

[expression_plots rpkm]
;; path to list of rpkm coverage file
$;INPUT_FILE$; = $;REPOSITORY_ROOT$;/output_repository/rpkm_coverage_stats/$;PIPELINEID$;_rpkm_cvg/rpkm_coverage_stats.rpkm.stats.list
*/

